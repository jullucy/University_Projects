Description: This is a documentation file for the project. It contains information about the project.
Programme created for "Python Programming classes"
Author: Julia ≈Åucyn
Date: 2025-01-25
Version: 1.0

Project files:
- server.py
This FastAPI application provides an API for interacting with DrugBank data.
It allows users to query the number of pathways that interact with a specific drug
based on its DrugBank ID.
Countains:
    - count_drug_interactions(root, drugbank_id) function, which counts the number of pathways
     that interact with a given drug.

- test_drug.py
This module contains a series of unit tests for various functions in the
DrugBank data processing pipeline. These tests cover different aspects such
as loading XML data, extracting drug information, counting drug interactions,
and validating expected outcomes.

- test_for_generated_base.py
This module uses 13 of project main modules and executes them with 'drugbank_partial_and_generated.xml'
file. It works like main.py (look below).

- main.py
Main function of the project. It is the first file that should be run to start the project.
It uses 13 of project main modules and executes them with 'drugbank_partial.xml' file.

Files used in main:
- data_read.py
Countains:
    - "load_drugbank_data(file_path, namespaces)" function, witch reads the data from the file
    and returns list[xml.etree.ElementTree.Element]: A list of `drug` elements found in the XML file.
    Each element can be further processed to extract drug data.
It uses 'xml.etree.ElementTree' module to parse the file.
This is a helper file, it is not destined to be executed solo.

- file_read.py
Countains:
    - "extract_primary_drug_data(drugs, namespaces)" funciton, witch extracts primary drug data
    from the list of drugs. It returns a data frame with parsed data and save it to the 'primary_data.csv' file.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse the
xml file.

- synsonyms_searcher.py
Countains:
    - "extract_synonyms(drugs, namespace)" funciton, which extracts synonyms from the list of drugs.
    It returns a data frame with parsed data and save it to the 'synonyms.csv' file.
    - "draw_synonym_graph(drugbank_id, synonym_df)" prepares a graph of synonyms for a given drugbank_id.
    The drugbank id should be given in the input.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file.

- products.py
Countains:
    "extract_products(drugs, namespace)" funciton, which extracts products from the list of drugs.
    It returns a data frame with parsed data and save it to the 'products.csv' file.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- pathways.py
Countains "extract_pathways(drugs, namespace)" funciton, which extracts pathways from the list of drugs.

- pathways_plot.py
Countains:
    - extract_pathway_interactions(drugs, namespace) function, which extracts pathway interactions
    from the list of drugs.
    - create_bipartite_graph(pathway_df) function, which creates a bipartite graph of pathways and drugs.
    - plot_bipartite_graph(B) function, which plots a bipartite graph with distinct colors for drugs and pathways
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- pathways_histogram.py
Countains:
    - plot_histogram(pathway_df) function, which plots a histogram of pathways.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- targets.py
Countains:
    - extract_target_data(drugs, namespace) function, which extracts targets from the list of drugs.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- targets_plot.py
Countains:
    - plot_cellular_locations(file_path) function, which plots a pie chart of cellular locations of targets.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- drug_info.py
Countains:
    - extract_drug_info(drugs, namespace) function, which extracts and counts the statuses of drugs
    from the DrugBank XML data.
    - plot_pie_chart(status_counts) function, which plots a pie chart of drug statuses.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- interactions.py
Countains:
    - extract_drug_interactions(drugs, namespaces) function, which extracts potential drug interactions
    from the DrugBank database.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- genes_interactions.py
Countains:
    - extract_gene_drug_data(drugs, namespace) function, which extracts gene-drug-product relationships
    from DrugBank XML data
    - draw_gene_drug_graph(gene_drug_df, gene_name) function, which visualizes the gene-drug-product
    relationships for a specific gene as a network graph.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.

- my_own_analysis.py
Countains:
    - extract_uniprot_ids(drugs, namespace, drugbank_id) function, which extracts UniProt IDs for the targets
    of a specific DrugBank ID.
    - query_uniprot(uniprot_id) function, which queries the UniProt database for a given UniProt ID
    and extracts relevant fields like description
    - create_taxonomy_star_network(drugbank_id, taxonomy_data) function, which creates a star network graph with
    the DrugBank ID at the center and taxonomies connected to it
    - plot_taxonomy_star_network(G) function, which plots the star-like network graph with DrugBank ID at the center
    - analyse(drugs, namespaces) main function to drive the analysis of DrugBank data, extract UniProt IDs, query for their details,
    and plot the network of taxonomies.
In order to execute only this file use main. It uses load_drugbank_data function from data_read.py file to parse
the xml file the.
